#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer

        MOV.W #0xFFFF,R15
        MOV.W #0xFFFF,R14
        CALL #Mult_Signed
        JMP $                           ; jump to current location '$'

                                        ; (endless loop)

Mult_Signed:  		TST.W R14
	      		JGE Mult_Signed_Else
	      		INV.W R15
	      		INC.W R15
	      		INV.W R14
	      		INC.W R14
Mult_Signed_Else	CALL #Mult_Routine
			RET
                        
Mult_Routine:           CLR.W R13
                        MOV.W R14,R12
Mult_loop:              CMP #0,R12
                        JEQ End_Mult
                        ADD.W R15,R13
                        DEC.W R12
                        JMP Mult_loop
End_Mult:               MOV.W R13,R15
                        RET
        END
