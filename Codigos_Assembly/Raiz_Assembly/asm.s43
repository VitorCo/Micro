#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer

        MOV.W #12,R15
        CALL #Raiz
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
Raiz:     MOV R15,R14
          RRA R14
          CLR R11                        ; contador
Loop_Raiz:CMP #11,R11
          JGE End_Loop
          PUSH R15
          CALL #Div_Loop
          ADD R15,R14
          RRA R14
          INC R11
          POP R15
          JMP Loop_Raiz
End_Loop: MOV R14,R15
          RET

Div_Loop:       CLR R13
Loop_Div        CMP R14,R15
                JL END_Div
 		SUB R14,R15
 		INC R13
 		JMP Loop_Div             
END_Div:        MOV R13,R15
                RET

        END
